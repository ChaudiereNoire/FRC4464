// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.revrobotics.CANError;
import com.revrobotics.CANSparkMax.IdleMode;
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private CANSparkMax sparkMAX_LF;
private CANSparkMax sparkMAX_LR;
private SpeedControllerGroup speedControllerGroup1;
private CANSparkMax sparkMAX_RF;
private CANSparkMax sparkMAX_RR;
private SpeedControllerGroup speedControllerGroup2;
private RobotDrive robotDrive21;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public drive() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
sparkMAX_LF = new CANSparkMax(1, MotorType.kBrushless);

sparkMAX_LF.restoreFactoryDefaults();  
sparkMAX_LF.setInverted(false);
sparkMAX_LF.setIdleMode(IdleMode.kCoast);
  
        
sparkMAX_LR = new CANSparkMax(2, MotorType.kBrushless);

sparkMAX_LR.restoreFactoryDefaults();  
sparkMAX_LR.setInverted(false);
sparkMAX_LR.setIdleMode(IdleMode.kCoast);
  
        
speedControllerGroup1 = new SpeedControllerGroup(sparkMAX_LF, sparkMAX_LR  );
addChild("Speed Controller Group 1",speedControllerGroup1);

        
sparkMAX_RF = new CANSparkMax(3, MotorType.kBrushless);

sparkMAX_RF.restoreFactoryDefaults();  
sparkMAX_RF.setInverted(false);
sparkMAX_RF.setIdleMode(IdleMode.kCoast);
  
        
sparkMAX_RR = new CANSparkMax(4, MotorType.kBrushless);

sparkMAX_RR.restoreFactoryDefaults();  
sparkMAX_RR.setInverted(false);
sparkMAX_RR.setIdleMode(IdleMode.kCoast);
  
        
speedControllerGroup2 = new SpeedControllerGroup(sparkMAX_RF, sparkMAX_RR  );
addChild("Speed Controller Group 2",speedControllerGroup2);

        
robotDrive21 = new RobotDrive(speedControllerGroup1, speedControllerGroup2);

robotDrive21.setSafetyEnabled(true);
robotDrive21.setExpiration(0.1);
robotDrive21.setSensitivity(0.5);
robotDrive21.setMaxOutput(1.0);

        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

