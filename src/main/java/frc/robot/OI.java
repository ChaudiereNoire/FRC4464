// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
import frc.robot.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public JoystickButton jB01;
public JoystickButton jB02;
public JoystickButton jB03;
public JoystickButton jB04;
public JoystickButton jB05;
public JoystickButton jB06;
public JoystickButton jB07;
public JoystickButton jB08;
public JoystickButton jB09;
public JoystickButton jB10;
public JoystickButton jB11;
public JoystickButton jB12;
public Joystick jS1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

jS1 = new Joystick(0);

jB12 = new JoystickButton(jS1, 1);
jB12.whileHeld(new DoNothing());
jB11 = new JoystickButton(jS1, 1);
jB11.whileHeld(new DoNothing());
jB10 = new JoystickButton(jS1, 1);
jB10.whileHeld(new DoNothing());
jB09 = new JoystickButton(jS1, 9);
jB09.whileHeld(new DoNothing());
jB08 = new JoystickButton(jS1, 8);
jB08.whileHeld(new DoNothing());
jB07 = new JoystickButton(jS1, 7);
jB07.whileHeld(new DoNothing());
jB06 = new JoystickButton(jS1, 6);
jB06.whileHeld(new DoNothing());
jB05 = new JoystickButton(jS1, 5);
jB05.whileHeld(new DoNothing());
jB04 = new JoystickButton(jS1, 4);
jB04.whileHeld(new DoNothing());
jB03 = new JoystickButton(jS1, 3);
jB03.whileHeld(new DoNothing());
jB02 = new JoystickButton(jS1, 2);
jB02.whileHeld(new DoNothing());
jB01 = new JoystickButton(jS1, 1);
jB01.whileHeld(new DoNothing());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("DoNothing", new DoNothing());
        SmartDashboard.putData("DriveUsingJoystick", new DriveUsingJoystick());
        SmartDashboard.putData("RaiseLiftPoles", new RaiseLiftPoles());
        SmartDashboard.putData("Ascend", new Ascend());
        SmartDashboard.putData("SpinToCount", new SpinToCount());
        SmartDashboard.putData("SpinToColor", new SpinToColor());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
public Joystick getJS1() {
        return jS1;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

