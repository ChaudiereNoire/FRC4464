// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;
import edu.wpi.first.wpilibj.DriverStation;

/**
 *
 */
public class SpinToColor extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private String target = "None";

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public SpinToColor() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.spinner);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        target = "None";
        String gameData;
        gameData = DriverStation.getInstance().getGameSpecificMessage();
        if (gameData.length() > 0) {
            switch (gameData.charAt(0)) {
              case 'B' :
                 //Blue case code
                 break;
              case 'G' :
                 //Green case code
                 break;
              case 'R' :
                 //Red case code
                 break;
              case 'Y' :
                 //Yellow case code
                 break;
              default :
                 //This is corrupt data
                 break;
            }
        } else {
            //Code for no data received yet
        }
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if ( target == "None") {
            String gameData;
            gameData = DriverStation.getInstance().getGameSpecificMessage();
            if (gameData.length() > 0) {
                switch (gameData.charAt(0)) {
                  case 'B' :
                     //Blue case code
                     target = "Red";
                     break;
                  case 'G' :
                     //Green case code
                     target = "Yellow";
                     break;
                  case 'R' :
                     //Red case code
                     target = "Blue";
                     break;
                  case 'Y' :
                     //Yellow case code
                     target = "Green";
                     break;
                  default :
                     //This is corrupt data
                     target = "None";
                     break;
                }
            } else {
                //Code for no data received yet
                target = "None";
            }
    

        } else {
            Robot.spinner.spin( -.5);
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
